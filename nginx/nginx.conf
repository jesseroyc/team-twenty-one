http {
    # load balancing
    upstream frontend_hosts {
        hash $remote_addr$remote_port consistent;
        server node:8080;
        server node:8080;
    }
    
    # load balancing
    upstream backend_hosts {
        hash $remote_addr$remote_port consistent;
        server node:8080;
        server node:8080;
    }

    # data caching for params and query
    proxy_cache_path /var/lib/nginx/cache levels=1:2 keys_zone=backcache:8m max_size=50m;
    proxy_cache_key "$scheme$request_method$host$request_uri$is_args$args";
    proxy_cache_valid 200 302 10m;
    proxy_cache_valid 404 1m;
    
    server {
    
        listen 80;
        server_name frontend_hosts.com;
        
        # gzip
        gzip on;
        gzip_proxied any;
        gzip_vary on;
        
        # resource serving and availability
        proxy_set_header HOST $host;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Proxy-Cache $upstream_cache_status;
        
        # buffering promotes conn speed
        proxy_buffering off;
        proxy_buffer_size 4k;
        proxy_buffers 24 4k;
        proxy_busy_buffers_size 8k;
        proxy_max_temp_file_size 2048m;
        proxy_temp_file_write_size 32k;
    
        
        location / {
            # root proxy
            proxy_pass http://backend_hosts;
        }
    
        location /match/here {
          # each proxy enhances productivity
          proxy_pass http://frontend_hosts/new/prefix;
        }
        
        location /different/match {
          # locations data can be picked at
          proxy_pass frontend_hosts.com;
        }
        
        location /proxy-me {
            # proxy cache for backend params and query
            proxy_cache backcache;
            proxy_cache_bypass $http_cache_control;
            add_header X-Proxy-Cache $upstream_cache_status;
            # allows passing of data to backend
            proxy_pass http://backend_hosts;
        }
        
        location / {
            # empty cache after 60m
            expires 60m;
        }
        
        location /private {
            expires -1;
            add_header Cache-Control "no-store";
        }
    }
}